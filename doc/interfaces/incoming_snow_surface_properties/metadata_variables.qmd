---
title: "Metadata: variables"
filters:
  - "include-code-files"
# A custom field for listing display:
provider: "Version control"
---

Variables which are available for display either as **gridded data** on the **map** user
interface component or as a **line chart** on the **plot** UI component.

:::{.callout-note}
This mixing of concerns assumes a 1:1 relationship between gridded data variables and
plot data variables.

If that assumption is valid, and both NoData and SWE variables can be extracted from the
gridded variables specification, then perhaps plot variables and gridded data variables
should continue to share an ID.
:::

* Variables definition file **MUST** be named `variables.json`.
* Variables definition file **MUST** be in compliance with the schema.
* Variables definition file **MUST** be ingested by copying
  `static/snow-surface-properties/variables.json` from this repository, as this
  source-controlled file is the source of truth.

NoData masks are identified by `"layerType": "raster_notprocessed"`.

:::{.callout-note}
NoData masks, to me, don't make sense as variables, and this should be resolved in
a future version of the spec.

Perhaps the NoData mask will have its own JSON config file.
:::

```{python}
#| echo: false
from snow_today_webapp_ingest.schema import display_jsonschema_and_example_markdown
from snow_today_webapp_ingest.types_.variables import SatelliteVariablesIndex 
import os

display_jsonschema_and_example_markdown(
  example_fp="../static/snow-surface-properties/variables.json",
  model=SatelliteVariablesIndex,
  base_dir=os.path.abspath(''),
)
```
