#!/bin/bash
set -euo pipefail

ENVIRONMENT="$1"

THIS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT_DIR="$(dirname "$THIS_DIR")"

VERSION_FILE="$REPO_ROOT_DIR/VERSION.env"

source /etc/profile.d/envvars.sh

cd "$REPO_ROOT_DIR"

if [ "$ENVIRONMENT" = "integration" ]; then
    version_desc="latest"
    VERSION_FILE="$REPO_ROOT_DIR/VERSION.latest.env"
else
    version_desc="production"
fi

echo "Using $version_desc versions in $ENVIRONMENT..."
cat "$VERSION_FILE"
source "$VERSION_FILE"

# Symlink correct compose override
ln -sf docker-compose.live.yml docker-compose.override.yml

# Pull new server version
docker-compose pull data-server

# Cleanup old containers
docker-compose down --remove-orphans

# Start the new server version
docker-compose up -d data-server

# Cleanup old images
docker system prune -af

# Pull new ingest container (this is for execution by ops on schedule)
docker-compose pull ingest
