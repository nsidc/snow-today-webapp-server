from pydantic import BaseModel, ConfigDict, Extra, RootModel
from pydantic.alias_generators import to_camel


# NOTE: this module is the only one allowed (by Ruff) to import pydantic.BaseModel or
#       pydantic.RootModel. That protects us from accidental use without our global
#       configs.
class BaseModel(BaseModel):  # type:ignore[no-redef]
    model_config = ConfigDict(
        alias_generator=to_camel,
        # Allow using the Python field name instead of just the alias generated by
        # `to_camel`. For some reason, the latter is Pydantic's default.
        populate_by_name=True,
        extra=Extra.forbid,
        frozen=True,
    )


class RootModel(RootModel):  # type:ignore[no-redef]
    model_config = ConfigDict(frozen=True)
